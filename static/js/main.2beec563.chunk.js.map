{"version":3,"sources":["serviceWorker.js","Utilities/ApiLayer.js","Utilities/ApiUrls.js","Pages/AllVideos/actionCreator.js","Pages/AllVideos/actionDispatches.js","Components/VideoCard/index.js","Components/Loader/index.js","Components/VideoGroup/index.js","Pages/AllVideos/index.js","Pages/404/index.js","Utilities/utils.js","Components/PageMenu/index.js","Components/PageFilter/index.js","App/actionCreator.js","App/actionDispatches.js","AppPath.js","Genres.js","App/App.js","Router/index.js","Store/globalState.js","Pages/AllVideos/reducer.js","App/reducer.js","Store/reducer.js","Store/index.js","index.js"],"names":["Boolean","window","location","hostname","match","apiKey","process","errorMessages","type","message","msg","details","openNotification","obj","notification","key","description","placement","className","duration","appAxios","axios","create","baseURL","interceptors","request","use","response","status","data","successHandler","error","responseData","Promise","reject","errorHandler","Api","all","get","id","config","params","api_key","include_adult","movies","trending","tv","search","ApiUrls","movie","popular","newest","toprated","action","getAllTrendingVideosRequest","getAllTrendingVideosFinished","value","getNewestFinished","actionDispatches","dispatch","getVideos","actions","payload","p1","p2","then","VideoCard","props","movieData","movieImageUrl","this","poster_path","alt","src","original_title","original_name","overview","Component","Loader","icon","classList","defaultClasses","VideoGroup","state","groupData","groupDataLoading","length","image","PRESENTED_IMAGE_SIMPLE","map","elm","index","orientation","groupTitle","getMovieCardsUI","AllVideos","currentSelection","parentState","currentTypeSelected","currentSearch","initialLoad","typeSelected","setState","loadVideos","loadSearch","query","updateState","allTrendingVideosLoading","stateObj","allVideosLoading","allTrendingMovies","trendingMovies","allTrendingTvs","trendingTvs","React","mapDispatchToProps","compose","withRouter","connect","trendingVideosState","appState","Error404","timer","loadHomePage","history","push","setTimeout","title","subTitle","extra","onClick","utils","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","throttle","redirect","toUrl","href","redirectToPath","toPath","pathname","findIndexInArray","keyToCheck","valToFind","findIndex","objectToUrlParams","str","val","undefined","encodeURIComponent","substr","urlParamsToObject","paramsArr","split","objToReturn","forEach","arr","decodeURIComponent","formatFileSize","bytes","decimalPoint","dm","i","Math","floor","log","parseFloat","pow","toFixed","createElement","elmType","innerText","document","setAttribute","jsTimeToEpoch","date","time","Date","getTime","round","epochToJsTime","epoch","toLocaleDateString","weekday","year","month","day","hour","minute","second","PageMenu","menuItems","menuTitle","searchRequired","searchHandler","valueInitialised","menuSelected","currentMenu","searchValue","searchDefaultValue","onSearch","event","target","filterClick","filterClickEvent","searchInitialValue","options","item","selection","url","menuClickHandler","defaultselection","defaultSelected","span","offset","handleMenuClick","defaultSelectedKeys","selectedKeys","mode","theme","Item","titleToDisplay","placeholder","prefix","onChange","style","width","Option","PageFilter","selectedGenreList","genre","from","to","rate","emitFilterValues","filterValuesMethod","e","allGenres","toLowerCase","genereChange","dateFrom","dateTo","rateChange","types","selectionTypes","genres","years","yearOptions","generateYearOptions","defaultSelectionType","getFullYear","minYear","onSelect","console","getOptions","name","allowClear","ghost","updateTypeSelection","updateSearch","updatePageSelection","newValue","appMenuItems","appAllowedPaths","defaultPath","Genres","antIcon","fontSize","spin","setDefaultIndicator","Header","Content","selectionType","App","hideFilters","filterVisible","showFilters","searchCleared","filterValues","alert","JSON","stringify","currentPage","initialize","pathArr","path","trim","searchUrlLoaded","initializeState","pageSelected","offsetTop","updatePage","bind","padding","children","closable","onClose","visible","RouterComp","redirectTo","redirectUrl","basename","exact","render","component","globalState","updateAllTrendingVideos","newState","results","updateNewest","updateTypeSelected","reducer","combineReducers","store","createStore","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2beec563.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios'\nimport { notification } from 'antd';\nconst apiKey = process.env.REACT_APP_API_KEY;\nconst baseUrl  = process.env.REACT_APP_API_BASEURL;\n\n\nconst errorMessages = {\n  403: {\n    type: 'info',\n    message: {\n      msg: 'Forbidden', \n      details: 'You dont have sufficient permissions for this operation.'\n    }\n  },\n  500: {\n    type: 'error',\n    message: {\n      msg: 'Server Error', \n      details: 'Something went wrong, Please try again after sometime'\n    }\n  },\n\n  400: {\n    type: 'error',\n    message: {\n      msg: '400 Bad request', \n      details: 'Bad request'\n    }\n  }\n}\n\nconst openNotification = (type, obj) => {\n  notification[type]({\n    key: 'key-' + obj.msg,\n    message: `${obj.msg}`,\n    description: `${obj.details}`,\n    placement: 'bottomLeft',\n    className: 'notification-'+type,\n    duration: 4\n  });\n};\n\n\n\nconst requestHandler = (request) => {\n  return request\n}\n\n\n\nconst successHandler = (response) => {\n  if (response.status === 200) {\n    return {...response.data, status: response.status};\n  }\n}\n\nconst errorHandler = (responseData) => {\n  let {response} = responseData\n  if (!response) {\n    return\n  }\n\n  if (response.status === 404 || response.status === 400 || response.status === 409 || response.status === 403) {\n    let message = errorMessages['400'].message;\n    if (response.data && response.data.data) {\n      if (response.data.data.msg) {\n        message.details = response.data.data.msg;\n      }\n    }\n    openNotification(errorMessages['400'].type, message);\n  }\n\n\n  if (response.status === 500) {\n    openNotification(errorMessages['500'].type, errorMessages['500'].message);\n  }\n  return Promise.reject({...response, status: response.status});\n}\n\n\nconst appAxios = axios.create({\n  baseURL: `${baseUrl}`\n});\n\nappAxios.interceptors.request.use(\n  request => requestHandler(request)\n)\n\nappAxios.interceptors.response.use(\n  response => successHandler(response),\n  error => errorHandler(error)\n)\n\n\nconst Api = {\n  all: axios.all,\n  get (id, config) {\n    if (config.params) {\n      config.params.api_key = apiKey;\n      config.params.include_adult=false;\n    } else {\n      config.params = {\n        api_key: apiKey,\n        include_adult: false\n      }\n    }\n    \n    return appAxios.get(id, config);\n  },\n  // delete (id, config) {\n  //   return appAxios.delete(id, config);\n  // },\n  // post (id, data, config) {\n  //   return appAxios.post(id, data, config)\n  // }\n}\n\nexport {\n  Api\n}\n","const baseUrl  = process.env.REACT_APP_API_BASEURL;\nconst time = process.env.REACT_APP_API_TIME;\n\nconst ApiPath = {\n   movies: 'movie',\n   trending: 'trending',\n   tv: 'tv',\n   search: 'search'\n}\nconst {movies, trending, tv, search} = ApiPath;\nconst ApiUrls = {\n    trending : {\n        movie: `${trending}/movie/${time}`,\n        tv: `${trending}/tv/${time}`,\n    },\n\n    popular: {\n        movie: `${movies}/popular`,\n        tv: `${tv}/popular`,\n    },\n\n    newest: {\n        movie: `${movies}/latest`,\n        tv: `${tv}/latest`,\n    },\n\n    toprated: {\n        movie: `${movies}/top_rated`,\n        tv: `${tv}/top_rated`,\n    },\n\n    search: {\n        movie: `${search}/movie`,\n        tv: `${search}/tv`,\n    }\n\n}\n\n\nexport {\n    ApiUrls,\n    baseUrl\n}","const GET_VIDEOS_REQUEST = 'GET_VIDEOS_REQUEST';\nconst GET_VIDEOS_SUCCESS = 'GET_VIDEOS_SUCCESS';\nconst GET_VIDEOS_FAILURE = 'GET_VIDEOS_FAILURE';\n\nconst GET_NEWEST_SUCCESS = 'GET_NEWEST_SUCCESS';\nconst GET_NEWEST_FAILURE = 'GET_NEWEST_FAILURE';\n\nconst action = {\n    \n    getAllTrendingVideosRequest: (params) => {\n        return {\n            type: GET_VIDEOS_REQUEST\n        }\n    },\n  \n    getAllTrendingVideosFinished: (params, status) => {\n        return {\n            type: status === 'success' ? GET_VIDEOS_SUCCESS : GET_VIDEOS_FAILURE,\n            value: {\n                response: params,\n                status\n            }\n        }\n    },\n\n  \n    getNewestFinished: (params, status) => {\n        return {\n            type: status === 'success' ? GET_NEWEST_SUCCESS : GET_NEWEST_FAILURE,\n            value: {\n                response: params,\n                status\n            }\n        }\n    }\n};\n\nexport default action;","import {Api} from 'Utilities/ApiLayer';\nimport {ApiUrls} from 'Utilities/ApiUrls';\nimport actions from './actionCreator'\n\nconst actionDispatches = (dispatch) => {\n\n\n    var objToReturn = {\n        getVideos: (type, params) => {\n            dispatch(actions.getAllTrendingVideosRequest());\n            let payload = {params}\n\n            let p1 = Api.get(ApiUrls[type].movie, payload);\n            let p2 = Api.get(ApiUrls[type].tv, payload);\n\n            return Api.all([p1, p2]).then( (response) => {\n                dispatch(actions.getAllTrendingVideosFinished(response, 'success'));\n            }, (error) => {\n                dispatch(actions.getAllTrendingVideosFinished(error, 'failure'));\n                return Promise.reject(error);\n            })\n        },\n\n        newest: (params) => {\n            dispatch(actions.getAllTrendingVideosRequest());\n            let payload = {params}\n            let p1 = Api.get(ApiUrls.newest.movie, payload);\n            let p2 = Api.get(ApiUrls.newest.tv, payload);\n            return Api.all([p1, p2]).then( (response) => {\n                dispatch(actions.getNewestFinished(response, 'success'));\n            }, (error) => {\n                dispatch(actions.getNewestFinished(error, 'failure'));\n                return Promise.reject(error);\n            })\n        },\n\n\n        search: (params) => {\n            dispatch(actions.getAllTrendingVideosRequest());\n            let payload = {params}\n\n            let p1 = Api.get(ApiUrls.search.movie, payload);\n            let p2 = Api.get(ApiUrls.search.tv, payload);\n\n            return Api.all([p1, p2]).then( (response) => {\n                dispatch(actions.getAllTrendingVideosFinished(response, 'success'));\n            }, (error) => {\n                dispatch(actions.getAllTrendingVideosFinished(error, 'failure'));\n                return Promise.reject(error);\n            })\n        },\n\n\n\n    }\n    return objToReturn;\n}\n\nexport default actionDispatches;","import React, { Component } from 'react';\nimport './style.css';\n\nclass VideoCard extends Component {\n    constructor(props) {\n        super(props)\n        this.movieData = this.props.movieData;\n        this.movieImageUrl = 'https://image.tmdb.org/t/p/w500'\n    }\n\n    render() {\n        return (\n            <div className=\"videoCard\">\n                {\n                    this.movieData.poster_path ?\n                    <img className=\"poster\" alt=\"posterimage\" src={this.movieImageUrl + this.movieData.poster_path} /> :\n                    <div className=\"poster dummyImageCard\">No Image Found</div>\n\n                }\n               <div className=\"details\">\n                    <div className=\"title\">{this.movieData.original_title || this.movieData.original_name}</div>\n                    <div className=\"description\">{this.movieData.overview}</div>\n               </div>\n            </div>\n        );\n    }\n}\n  \nexport default VideoCard;","/*\n\n*/\nimport React, { Component } from 'react';\nimport { Spin } from 'antd';\n\nimport './style.css';\n\nexport default class Loader extends Component {\n    constructor(props) {\n        super(props);\n        this.icon = !(props.icon) ? 'loading' : props.icon;\n        this.classList = !(props.classList) ? '' : props.classList;\n        this.defaultClasses = 'globalLoadingSpinner ' + this.classList\n    }\n\n    render() {\n        return (\n            <div className={this.defaultClasses}>\n                <div className=\"icon\">\n                    <Spin/>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport VideoCard from 'Components/VideoCard'\nimport Loader from 'Components/Loader'\nimport { Divider, Empty } from 'antd';\n\nimport './style.css';\n\nclass VideoGroup extends Component {\n    state = {\n        groupData: this.props.groupData,\n        groupDataLoading: this.props.groupDataLoading\n\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.groupDataLoading !== state.groupDataLoading) {\n          return {\n            groupDataLoading: props.groupDataLoading,\n            groupData: props.groupData\n          };\n        }\n        return null;\n    }\n\n    getMovieCardsUI () {\n        return (\n            <div className=\"group flex\">\n                {\n                    this.state.groupData.length === 0 ?\n                    <div className=\"empty\">\n                        <Empty  image={Empty.PRESENTED_IMAGE_SIMPLE}/> \n                    </div>:\n                    this.state.groupData.map((elm, index) => {\n                        return <VideoCard key={index} movieData={elm}/>\n                    })\n                }\n            </div>\n        )  \n    }\n\n    render() {\n        return (\n            <div className=\"videoGroup\">\n                <Divider orientation=\"left\">{this.props.groupTitle}</Divider>\n                {\n                    this.state.groupDataLoading ? <Loader classList=\"groupLoader\"/> : this.getMovieCardsUI()\n                }\n            </div>\n        );\n    }\n}\n  \nexport default VideoGroup;","import React from 'react'\nimport './style.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport actionDispatches from './actionDispatches';\nimport VideoGroup from 'Components/VideoGroup'\n\n\nclass AllVideos extends React.Component {\n  state = {\n    currentSelection: this.props.parentState.currentTypeSelected,\n    currentSearch: ''\n  }\n\n  updateState (initialLoad) {\n    let typeSelected = this.props.parentState.currentTypeSelected;\n    let search = this.props.parentState.currentSearch || ''\n    if (!search === false) {\n      if (this.state.currentSearch !== search) {\n        this.setState({currentSearch: search}, this.loadSearch);\n      }\n      return\n    } else if (this.state.currentSelection !== typeSelected || initialLoad === true) {\n      this.setState({currentSelection: typeSelected}, this.loadVideos);\n    }\n  }\n\n  loadVideos () {\n    if (!this.state.currentSelection) {\n      return\n    }\n    if (this.state.currentSelection !== 'newest') {\n      this.props.getVideos(this.state.currentSelection);\n    } else {\n      this.props.newest();\n    }\n  }\n\n  loadSearch () {\n    var params = {\n      query: this.state.currentSearch\n    }\n    this.props.search('search', params);\n  }\n\n\n  componentDidMount(){\n    this.updateState(true);\n  }\n\n  componentDidUpdate(){\n    this.updateState();\n  }\n\n  render() {\n      let allTrendingVideosLoading = this.props.stateObj.allVideosLoading;\n      let allTrendingMovies = this.props.stateObj.trendingMovies || [];\n      let allTrendingTvs = this.props.stateObj.trendingTvs || [];\n\n      return (\n        <div className=\"page trendingPage\">\n          {/* video group component renders the group ui */}\n          <VideoGroup \n            groupTitle={'Movies'} \n            groupDataLoading={allTrendingVideosLoading}\n            groupData={allTrendingMovies}>\n          </VideoGroup>\n\n          <VideoGroup \n            groupTitle={'TV Shows'} \n            groupDataLoading={allTrendingVideosLoading}\n            groupData={allTrendingTvs}>\n          </VideoGroup>\n        </div>\n      )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    stateObj: state.trendingVideosState,\n    parentState: state.appState\n  }\n}\n\nconst mapDispatchToProps = actionDispatches;\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(AllVideos);","import React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { Result, Button } from 'antd';\nimport './style.css';\n\n\nclass Error404 extends React.Component {\n  state = {\n    timer: 6,\n  }\n  componentDidMount () {\n    this.timer();\n  }\n\n  timer () {\n    let {timer} = this.state;\n    setTimeout(() => {\n      this.setState({\n        timer: timer - 1,\n      });\n      if (this.state.timer > 0) {\n        this.timer();\n      } else {\n        this.loadHomePage();\n      }\n    },1000);\n  }\n\n  loadHomePage = () => {\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        { \n            <section className=\"flex w100pct h100pct ta-center flex-jc-c flex-item-center fs4 mt4 errorContainer\">\n              {/* <Icon type=\"disconnect\" />\n              <Icon type=\"home\" theme=\"filled\" />\n              <Icon type=\"stop\" theme=\"filled\" />\n              404 */}\n              <Result\n                className=\"m-auto\"\n                status=\"404\"\n                title=\"404\"\n                subTitle={`Ahhh! This page doesn't exist. Redirecting to home page in ${this.state.timer} seconds`}\n                extra={<Button type=\"primary\" icon=\"home\" onClick={this.loadHomePage}>Back Home</Button>}\n              />,\n            </section> \n        }\n      </div>\n    )\n  }\n}\nexport default withRouter(Error404)","const utils = {\n    debounce: function (func, wait, immediate) {\n        var timeout;\n        return function() {\n            var context = this, args = arguments;\n            var later = function() {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    },\n\n    throttle: function(func, wait = 100) {\n        let timer = null;\n        return function(...args) {\n            if (timer === null) {\n            timer = setTimeout(() => {\n                func.apply(this, args);\n                timer = null;\n            }, wait); \n            }\n        };\n    },\n\n    redirect: (toUrl) => {\n        window.location.href = toUrl;\n    },\n\n    redirectToPath: (toPath) => {\n        window.location.pathname = toPath;\n    },\n\n  \n    findIndexInArray: (data, keyToCheck, valToFind) => {\n        var index = data.findIndex( elm => {\n          return elm[keyToCheck] === valToFind;\n        })\n        return index;\n    },\n\n  \n\n    objectToUrlParams: (obj) => {\n        let str = '';\n        for (var key in obj) {\n            var val = obj[key];\n            if (val === undefined || val === null) {\n                val = '';\n            }\n            str = `${str}${key}=${encodeURIComponent(val)}&`\n        }\n        str = str.substr(0, str.length - 1);\n        return str;\n    },\n\n    urlParamsToObject: (params) => {\n        if (params[0] === '?') {\n            params = params.substr(1);\n        }\n        \n        let paramsArr = params.split('&');\n        let objToReturn = {}\n        \n        paramsArr.forEach( elm => {\n            var arr = elm.split('=');\n            objToReturn[decodeURIComponent(arr[0])] = decodeURIComponent(arr[1]);\n        })\n        return objToReturn;\n    },\n\n  \n\n    formatFileSize: (bytes,decimalPoint) => {\n        if (!bytes) {\n            return '0 Bytes';\n        }\n        if(bytes === 0) return '0 Bytes';\n        var k = 1000,\n            dm = decimalPoint || 2,\n            sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n            i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    },\n\n    createElement:  (elmType, classList, innerText) => {\n\t\tvar elm = document.createElement(elmType);\n\t\telm.setAttribute('class', classList);\n\t\tif (innerText !== undefined) {\n\t\t\telm.innerText =  innerText\n\t\t}\n\t\treturn elm;\n    },\n    \n    jsTimeToEpoch: (date) => {\n        let d = new Date(date);\n        let time = d.getTime();\n        let epoch = Math.round(time / 1000) ;\n        return epoch; \n    },\n    epochToJsTime: (epoch) => {\n        return (new Date(epoch * 1000)).toLocaleDateString(undefined, { \n            weekday: 'short',\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n            hour: 'numeric', \n            minute: 'numeric',\n            second: 'numeric'\n        })\n    }\n}\n\nexport default utils;","import React, { Component } from 'react';\nimport {Menu, Input, Icon} from 'antd';\nimport { Row, Col } from 'antd';\n\nimport './style.css';\n\n\nclass PageMenu extends Component {\n    menuItems = this.props.menuItems;\n    menuTitle = this.props.menuTitle;\n    searchRequired = this.props.searchRequired || false;\n    searchHandler = this.props.searchHandler;\n    valueInitialised = false\n    \n    state = {\n        menuSelected: [this.props.currentMenu],\n        searchValue: '',\n        searchDefaultValue: ''\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        return {\n            defaultSelected: [props.currentMenu],\n            searchDefaultValue: props.searchInitialValue\n        };\n    }\n\n    componentDidUpdate(props){\n        if(this.state.searchValue !== props.searchInitialValue && this.valueInitialised === false) {\n            this.setState({\n                searchValue: props.searchInitialValue\n            })\n            this.valueInitialised = true;\n        }\n    }\n\n\n    handleMenuClick (options, item, key) {\n        this.setState({\n            menuSelected: [item.key]\n        })\n        var selection = options[item.key].url;\n        this.props.menuClickHandler(selection, item, key)\n    };\n\n\n    onSearch = (event) => {\n        this.setState({\n            searchValue: event.target.value\n        }, ()=> {\n            if (this.searchHandler) {\n                this.searchHandler(this.state.searchValue, event);\n            }\n        });\n       \n    }\n\n    filterClick = (event) => {\n        if (this.props.filterClickEvent) {\n            this.props.filterClickEvent(event)\n        }\n    }\n\n\n   \n    render() {\n        let selection = this.state.menuSelected;\n        let defaultselection = this.state.defaultSelected;\n        return (\n            <div className=\"pageMenu\">\n                <Row>\n                    <Col span={4}>\n                        <div className=\"menuTitle\">\n                            {this.menuTitle}\n                        </div>\n                    </Col>\n                    <Col span={8} offset={4}>\n                        <div className=\"mt1\">\n                            <Menu\n                                onClick={(item, key) => {\n                                    this.handleMenuClick(this.menuItems, item, key)\n                                }}\n                                defaultSelectedKeys={defaultselection}\n                                selectedKeys = {selection}\n                                mode=\"horizontal\"\n                                theme=\"dark\"\n                            >\n                                {\n                                    this.menuItems.map((elm, index) => {\n                                        return  <Menu.Item key={index}>{elm.titleToDisplay}</Menu.Item>\n                                    })\n                                }\n                            </Menu>\n                        </div>\n                       \n                    </Col>\n                    <Col span={6} offset={2}>\n                        <div className=\"filterBox\">\n                            {\n                                this.searchRequired ?\n                                <Input\n                                    placeholder=\"input search text\"\n                                    prefix={<Icon type=\"search\" />} \n                                    onChange={this.onSearch}\n                                    style={{ width: 200 }}\n                                    value={this.state.searchValue}\n                                />:null\n                            }\n                            <div className=\"inline-block ml4 filterButton button\" onClick={this.filterClick}>\n                                <Icon type=\"filter\" />\n                            </div>  \n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default PageMenu;\n","import React, { Component } from 'react';\nimport { Rate, Select, Button } from 'antd';\nimport './style.css';\n\n\nconst { Option } = Select;\nclass PageFilter extends Component {\n    constructor(props) {\n        super(props)\n        this.types = this.props.selectionTypes || [];\n        this.allGenres = this.props.genres || {};\n        this.years = this.props.years || 20\n        this.yearOptions = this.generateYearOptions();\n        this.defaultSelectionType = this.props.defaultSelectionType;\n        this.genres = this.allGenres[this.defaultSelectionType.toLowerCase()];\n    }\n    state = {\n        selectedGenreList: [],\n        type: '',\n        genre: '',\n        from: '',\n        to: '',\n        rate: 0\n    }\n\n    emitFilterValues = () => {\n        let obj = {\n            type: this.state.type,\n            genre: this.state.genre,\n            from: this.state.from,\n            to: this.state.to,\n            rate: this.state.rate,\n        }\n        if (this.props.filterValuesMethod) {\n            this.props.filterValuesMethod(obj);\n        }\n    }\n\n    componentDidMount () {\n        this.setState({\n            selectedGenreList: this.genres\n        })\n    }\n\n    generateYearOptions () {\n        var year = (new Date()).getFullYear();\n        var minYear = year - this.years;\n        var options = [];\n        for (var i=year; i>=minYear; i--) {\n            options.push(i)\n        }\n        return options;\n    }\n\n    typeSelected = (e) => {\n        this.setState({\n            type: e,\n            selectedGenreList: this.allGenres[e.toLowerCase()]\n        })\n    }\n\n    genereChange = (e) => {\n        var data = this.state.selectedGenreList[e];\n        this.setState({\n            genre: data\n        })\n    }\n\n    dateFrom = (e) => {\n        if (this.state.to !== '' && e > this.state.to) {\n            this.setState({\n                to: e + 1\n            })\n        }\n        this.setState({\n            from: e\n        })\n    }\n\n    dateTo = (e) => {\n        if (this.state.from !== '' && e < this.state.from) {\n            this.setState({\n                from: e - 1\n            })\n        }\n        this.setState({\n            to: e\n        })\n    }\n\n    getOptions (val, index) {\n        return <Option key={index} value={val}>{val}</Option>\n    }\n\n    rateChange = (e) => {\n        this.setState({\n            rate: e\n        })\n    }\n\n\n    render() {\n        return (\n            <div className=\"pageFilter\">\n                <div className=\"filterRow\">\n                    <div className=\"rowLabel\">Type:</div>\n                    <Select onSelect={this.typeSelected}>\n                        {\n                            this.types.map( (elm, index) => {\n                                console.log(elm)\n                                return this.getOptions(elm, index)\n                            })\n                        }\n                    </Select>\n                </div>\n\n                <div className=\"filterRow\">\n                    <div className=\"rowLabel\">Genre:</div>\n                    <Select onSelect={this.genereChange}>\n                        {\n                            this.state.selectedGenreList.map( (elm, index) => {\n                                return <Option key={index} value={index}>{elm.name}</Option>\n                            })\n                        }\n                    </Select>\n                </div>\n\n                <div className=\"filterRow\">\n                    <div className=\"rowLabel\">Year:</div>\n                    <div className=\"flex\">\n                        <div className=\"mr2 flex year\">\n                            <Select onSelect={this.dateFrom}>\n                                {\n                                    this.yearOptions.map( (elm, index) => {\n                                        return this.getOptions(elm, index)\n                                    })\n                                }\n                            </Select>\n                        </div>\n                         to\n                        <div className=\"ml2 flex year\">\n                            <Select onSelect={this.dateTo}>\n                                {\n                                    this.yearOptions.map( (elm, index) => {\n                                        return this.getOptions(elm, index)\n                                    })\n                                }\n                            </Select>\n                        </div>\n                    </div>\n                </div>\n                \n                <div className=\"filterRow\">\n                    <div className=\"rowLabel\">Ratings:</div>\n                    <Rate allowClear={true} onChange={this.rateChange}/>\n                </div>\n\n                <div className=\"filterRow mt4\">\n                  <Button ghost onClick={this.emitFilterValues}>Apply</Button>\n                </div>\n            </div>\n        );\n    }\n}\n  \nexport default PageFilter;","const UPDATE_TYPE_SELECTION = 'UPDATE_TYPE_SELECTION';\nconst UPDATE_SEARCH = 'UPDATE_SEARCH';\n\nconst action = {\n    \n    updateTypeSelection: (value) => {\n        return {\n            type: UPDATE_TYPE_SELECTION,\n            value: value\n        }\n    },\n\n\n    updateSearch: (value) => {\n        return {\n            type: UPDATE_SEARCH,\n            value: value\n        }\n    }\n\n};\n\nexport default action;","import actions from './actionCreator'\nconst actionDispatches = (dispatch) => {\n    var objToReturn = {\n        updatePageSelection: (newValue) => {\n            dispatch(actions.updateTypeSelection(newValue));\n        },\n\n        updateSearch: (newValue) => {\n            dispatch(actions.updateSearch(newValue));\n        }\n    }\n    return objToReturn;\n}\n\nexport default actionDispatches;","const appMenuItems = [\n    {\n        url: 'trending',\n        titleToDisplay: 'Trending'\n    },\n\n    {\n        url: 'popular',\n        titleToDisplay: 'Popular'\n    }, \n    {\n        url: 'newest',\n        titleToDisplay: 'Newest'\n    },\n    {\n        url: 'toprated',\n        titleToDisplay: 'Top Rated'\n    }\n];\n\nconst appAllowedPaths = ['trending', 'popular', 'newest', 'toprated', 'search']\nconst defaultPath = appAllowedPaths[0];\n\n\nexport {\n    appMenuItems,\n    appAllowedPaths,\n    defaultPath\n}","const movieGenres = [\n      {\n        \"id\": 28,\n        \"name\": \"Action\"\n      },\n      {\n        \"id\": 12,\n        \"name\": \"Adventure\"\n      },\n      {\n        \"id\": 16,\n        \"name\": \"Animation\"\n      },\n      {\n        \"id\": 35,\n        \"name\": \"Comedy\"\n      },\n      {\n        \"id\": 80,\n        \"name\": \"Crime\"\n      },\n      {\n        \"id\": 99,\n        \"name\": \"Documentary\"\n      },\n      {\n        \"id\": 18,\n        \"name\": \"Drama\"\n      },\n      {\n        \"id\": 10751,\n        \"name\": \"Family\"\n      },\n      {\n        \"id\": 14,\n        \"name\": \"Fantasy\"\n      },\n      {\n        \"id\": 36,\n        \"name\": \"History\"\n      },\n      {\n        \"id\": 27,\n        \"name\": \"Horror\"\n      },\n      {\n        \"id\": 10402,\n        \"name\": \"Music\"\n      },\n      {\n        \"id\": 9648,\n        \"name\": \"Mystery\"\n      },\n      {\n        \"id\": 10749,\n        \"name\": \"Romance\"\n      },\n      {\n        \"id\": 878,\n        \"name\": \"Science Fiction\"\n      },\n      {\n        \"id\": 10770,\n        \"name\": \"TV Movie\"\n      },\n      {\n        \"id\": 53,\n        \"name\": \"Thriller\"\n      },\n      {\n        \"id\": 10752,\n        \"name\": \"War\"\n      },\n      {\n        \"id\": 37,\n        \"name\": \"Western\"\n      }\n    ]\n\nconst tvGenres = [\n    {\n      \"id\": 10759,\n      \"name\": \"Action & Adventure\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Animation\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Comedy\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Crime\"\n    },\n    {\n      \"id\": 99,\n      \"name\": \"Documentary\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Drama\"\n    },\n    {\n      \"id\": 10751,\n      \"name\": \"Family\"\n    },\n    {\n      \"id\": 10762,\n      \"name\": \"Kids\"\n    },\n    {\n      \"id\": 9648,\n      \"name\": \"Mystery\"\n    },\n    {\n      \"id\": 10763,\n      \"name\": \"News\"\n    },\n    {\n      \"id\": 10764,\n      \"name\": \"Reality\"\n    },\n    {\n      \"id\": 10765,\n      \"name\": \"Sci-Fi & Fantasy\"\n    },\n    {\n      \"id\": 10766,\n      \"name\": \"Soap\"\n    },\n    {\n      \"id\": 10767,\n      \"name\": \"Talk\"\n    },\n    {\n      \"id\": 10768,\n      \"name\": \"War & Politics\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Western\"\n    }\n  ]\n\n\nconst Genres = {\n    movie: movieGenres,\n    tv: tvGenres\n}\n\nexport default Genres","/*\n  The entire app gets rendered within the content of App.js\n*/\n\nimport React, { Component } from 'react';\nimport {Layout, Drawer, Affix, Spin, Icon} from 'antd';\nimport utils from 'Utilities/utils';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport PageMenu from 'Components/PageMenu'\nimport PageFilter from 'Components/PageFilter'\nimport actionDispatches from './actionDispatches';\nimport {appMenuItems} from 'AppPath'\nimport Genres from 'Genres'\n\nimport './App.css';\n\n\n// Globaly overriding spinner component\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 40 }} spin />;\nSpin.setDefaultIndicator(antIcon)\nconst { Header, Content} = Layout;\n\nconst selectionType = ['Movie', 'TV']\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.selection = '';\n    this.searchInitialValue='';\n    this.currentMenu='0'\n    this.menuItems = appMenuItems;\n\n    this.state = {\n      selection: '',\n      searchInitialValue: '',\n      currentMenu: '0',\n      currentPage: '',\n      filterVisible: false\n    }\n    this.menuTitle = 'Discover'\n    this.initialize();\n  }\n\n  // hide filter panel\n  hideFilters = () => {\n    this.setState({\n      filterVisible: false\n    })\n  }\n\n  // show filter panel\n  showFilters = () => {\n    this.setState({\n      filterVisible: true\n    })\n  }\n\n\n  searchUrlLoaded () {\n    let query = this.props.history.location.search;\n    let params = utils.urlParamsToObject(query);\n    if (params.query) {\n      return params.query;\n    } \n    return false;\n  }\n\n\n  initialize () {\n    let pathArr = this.props.history.location.pathname.split(\"/\");\n    let path = pathArr[pathArr.length - 1].trim();\n    var index = '0';\n    var query = ''\n    if (path === 'search') {\n      index = '0';\n      query = this.searchUrlLoaded();\n    } else {\n      index = utils.findIndexInArray(this.menuItems, 'url', path);\n    }\n    if (!query && query !== 0) {\n      this.searchCleared();\n    }\n\n    this.selection = path;\n    this.currentMenu = index + '';\n    this.searchInitialValue = query;\n\n  }\n\n  initializeState () {\n    this.setState({\n      selection: this.selection,\n      currentMenu: this.currentMenu,\n      searchInitialValue: this.searchInitialValue\n    }, () => {\n      if (this.searchInitialValue) {\n        this.props.updateSearch(this.searchInitialValue);\n        this.props.updatePageSelection('search');\n      } else {\n        this.props.updatePageSelection(this.state.selection);\n      }\n    })\n  }\n  \n  componentDidMount () {\n    this.initializeState()\n  }\n\n  searchCleared () {\n    this.props.updateSearch('');\n    this.props.history.push('/'+this.state.currentPage);\n    this.props.updatePageSelection(this.state.currentPage);\n\n  }\n \n  updatePage (pageSelected) {\n    this.props.updateSearch('');\n    this.props.history.push('/'+pageSelected);\n    this.props.updatePageSelection(pageSelected);\n    this.setState({\n      currentPage: pageSelected\n    })\n  }\n\n  updateSearch = utils.debounce((value, event) => {\n    if (!value && value !== 0) {\n      this.searchCleared();\n      return;\n    }\n    this.props.history.push('/search?query='+value);\n    this.props.updateSearch(value);\n    this.props.updatePageSelection('search');\n  }, 250)\n \n  // filter applied callback\n  filterValues = (obj) => {\n    alert(JSON.stringify(obj));\n    this.hideFilters()\n  }\n\n  render() {\n      return (\n        <div className=\"app\">         \n          <Layout className=\"appLayout\"> \n          <Header>\n            {/* app menu with configurations */}\n            <Affix offsetTop={0}>\n              {/* \n                - takes list of menuItems\n                - search required or not configuration\n                - method to call onSearch and filterClicked\n                -method to call when menu item is clicked\n              */}\n              <PageMenu \n                menuTitle={this.menuTitle} \n                menuItems={this.menuItems} \n                currentMenu={this.state.currentMenu}\n                menuClickHandler={this.updatePage.bind(this)} \n                searchRequired={true}\n                searchHandler={this.updateSearch.bind(this)}\n                searchInitialValue={this.state.searchInitialValue}\n                key={this.state.searchInitialValue || this.state.currentMenu}\n                filterClickEvent={this.showFilters}\n              />\n            </Affix>\n          </Header>\n            {/* container to render different pages */}\n            <Content style={{ padding: '0 0' }}>\n                \n                {/* container to render pages */}\n                <div id=\"container\" className=\"bodyContainer pageContainer p3\">\n                   {this.props.children}\n                </div>\n                \n                {/* Filter panel side drawer */}\n                <Drawer\n                  className=\"app\"\n                  title=\"Discover Options\"\n                  placement={this.state.placement}\n                  closable={true}\n                  onClose={this.hideFilters}\n                  visible={this.state.filterVisible}\n                >\n                  {/* \n                    page filter\n                    - take list of types, Genres, default selections\n                    - method to call when filter is applied\n                  */}\n                  <PageFilter \n                    genres={Genres} \n                    selectionTypes={selectionType}\n                    defaultSelectionType={selectionType[0]}\n                    filterValuesMethod = {this.filterValues}\n                  />\n                </Drawer>\n            </Content>\n          </Layout>\n        </div>\n      );\n  }\n}\n\nconst mapDispatchToProps = actionDispatches;\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n  }\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(App);\n","import React, { Component } from 'react';\nimport { BrowserRouter as HashRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport AllVideos from 'Pages/AllVideos'\nimport Error404 from 'Pages/404'\nimport App  from 'App/App';\nimport {appAllowedPaths, defaultPath} from 'AppPath'\n\nexport default class RouterComp extends Component {\n    redirectTo = function (redirectUrl) {\n        return (<Redirect to={'/'+defaultPath} />)\n    }\n\n    render() {\n        return (\n            <HashRouter basename=\"/\">\n                <App>\n                    <Switch>\n                        <Route exact path=\"/\" render={this.redirectTo}/>\n                        {\n                            appAllowedPaths.map((elm, index) => {\n                                return <Route key={index} exact path={`/${elm}`} component={AllVideos}/>\n                            })\n                        }\n                        <Route exact path=\"/404\" component={Error404}/>            \n                        <Route render={() => {\n                            return <Redirect to=\"/404\" />\n                        }}\n                        />\n                    </Switch>\n                </ App>\n            </HashRouter>\n        );\n    }\n}\n","/*\n    globalState is the state object of the app which will be used across the app for state nmanagement;\n*/\n\nconst globalState = {\n    trendingVideosState:{},\n    appState:{}\n}\n\nexport default globalState;","import globalState from 'Store/globalState';\n\n\nconst updateAllTrendingVideos = (state, action) => {\n  let {response} = action.value;\n  let newState = {...state};\n  newState.allVideosLoading = false;\n  newState.trendingMovies = response[0].results;\n  newState.trendingTvs = response[1].results;\n  return newState;\n}\n\nconst updateNewest = (state, action) => {\n  let {response} = action.value;\n  let newState = {...state};\n  newState.allVideosLoading = false;\n  newState.trendingMovies = [response[0]];\n  newState.trendingTvs = [response[1]];\n  return newState;\n}\n\n\nexport default function AllVideosReducer(state = globalState.trendingVideosState, action) {\n  switch (action.type) {\n\n    case 'GET_VIDEOS_REQUEST':\n      return {...state, allVideosLoading: true}\n    case 'GET_VIDEOS_SUCCESS':\n      return updateAllTrendingVideos(state, action);\n    case 'GET_VIDEOS_FAILURE':\n      return {...state, allVideosLoading: false}\n\n\n    case 'GET_NEWEST_SUCCESS':\n      return updateNewest(state, action);\n    case 'GET_NEWEST_FAILURE':\n      return {...state, allVideosLoading: false}\n\n   \n    default:\n      return state;\n  }\n}\n","import globalState from 'Store/globalState';\n\n\nconst updateTypeSelected = (state, action) => {\n  let {value} = action;\n  let newState = {...state};\n  newState.currentTypeSelected = value;\n  return newState;\n}\n\nconst updateSearch = (state, action) => {\n  let {value} = action;\n  let newState = {...state};\n  newState.currentSearch = value;\n  return newState;\n}\n\n\n\nexport default function AppReducer(state = globalState.appState, action) {\n  switch (action.type) {\n\n    case 'UPDATE_TYPE_SELECTION' :\n      return updateTypeSelected(state, action);\n\n    case 'UPDATE_SEARCH':\n      return updateSearch(state, action);\n\n    default:\n      return state;\n  }\n}\n","// import globalState from './globalState' \nimport {combineReducers} from 'redux';\nimport AllVideosReducer from 'Pages/AllVideos/reducer'\nimport AppReducer from 'App/reducer'\nconst reducer = combineReducers({\n    trendingVideosState: AllVideosReducer,\n    appState: AppReducer\n});\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from 'Store/reducer'\n\nconst store = createStore(reducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\n\nimport 'Style/funcssion.css';\nimport 'Style/style-utils.css';\nimport 'Style/style.css';\nimport 'Style/antCssOverrides.css'\n\nimport * as serviceWorker from './serviceWorker';\nimport RouterComp  from 'Router';\nimport store from 'Store'\n\n\nconst appIndexComponent = function () {\n    return (\n        <Provider store={store}>\n            <RouterComp/>\n        </Provider>\n    )\n}\n\n\nReactDOM.render(appIndexComponent(), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}